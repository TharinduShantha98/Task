<configuration>

    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>testFile.log</file>
        <append>true</append>
        <immediateFlush>true</immediateFlush>
        <!-- encoders are assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>



    <if condition='property("ENV").equals("prod")'>
        <then>
            <appender name="DATA_MASK" class="ch.qos.logback.core.FileAppender">
                <file>testFile2.log</file>
                <append>true</append>
                <immediateFlush>true</immediateFlush>
                <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
                    <layout class="API.MaskingPatternLayout">
                        <maskPattern>((?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4})</maskPattern> <!-- SSN -->
                      <!--  <maskPattern>((?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4})</maskPattern>-->
                        <maskPattern>(\w+@\w+\.\w+)</maskPattern> <!-- Email -->
                        <maskPattern>([0-9]{10})</maskPattern> <!--Account number -->
                        <maskPattern>([0-9]{8}v)</maskPattern> <!--Account number -->


                        <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
                    </layout>
                </encoder>
            </appender>
        </then>
        <else>
            <appender name="DATA_MASK" class="ch.qos.logback.core.FileAppender">
                <encoder>
                    <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
                </encoder>
            </appender>
        </else>
    </if>

   <!-- <appender name="HTML" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_ROOT}/${HTML_LOG_FILE}.html</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            &lt;!&ndash; daily rollover &ndash;&gt;
            <fileNamePattern>${LOG_ROOT}/${HTML_LOG_FILE}-%d{yyyy-MM-dd}.%i.html.gz</fileNamePattern>
            &lt;!&ndash; each archived file's size will be max 10MB &ndash;&gt;
            <maxFileSize>10MB</maxFileSize>
            &lt;!&ndash; 30 days to keep &ndash;&gt;
            <maxHistory>30</maxHistory>
            &lt;!&ndash; total size of all archive files, if total size > 100GB, it will delete old archived file &ndash;&gt;
            <totalSizeCap>100GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <charset>UTF-8</charset>
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <pattern>%d{HH:mm:ss.SSS}%thread%level%logger%line%msg</pattern>
            </layout>
        </encoder>
    </appender>

    <appender name="XML" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_ROOT}/${XML_LOG_FILE}.xml</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            &lt;!&ndash; daily rollover &ndash;&gt;
            <fileNamePattern>${LOG_ROOT}/${XML_LOG_FILE}-%d{yyyy-MM-dd}.%i.xml.gz</fileNamePattern>
            &lt;!&ndash; each archived file's size will be max 10MB &ndash;&gt;
            <maxFileSize>10MB</maxFileSize>
            &lt;!&ndash; 30 days to keep &ndash;&gt;
            <maxHistory>30</maxHistory>
            &lt;!&ndash; total size of all archive files, if total size > 100GB, it will delete old archived file &ndash;&gt;
            <totalSizeCap>100GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <charset>UTF-8</charset>
            <layout class="ch.qos.logback.classic.log4j.XMLLayout">
                <locationInfo>true</locationInfo>
                <properties>true</properties>
            </layout>
        </encoder>
    </appender>-->



    <root level="INFO">
        <appender-ref ref="FILE" />
        <appender-ref ref="DATA_MASK" />

    </root>

   <!-- <root level="DEBUG">
        &lt;!&ndash; appender referenced after it is defined &ndash;&gt;
        <appender-ref ref="DATA_MASK" />
    </root>-->





</configuration>
